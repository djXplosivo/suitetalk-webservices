
package com.netsuite.webservices.platform_2018_1;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import com.netsuite.webservices.platform.core_2018_1.AsyncStatusResult;
import com.netsuite.webservices.platform.core_2018_1.AttachReference;
import com.netsuite.webservices.platform.core_2018_1.BaseRef;
import com.netsuite.webservices.platform.core_2018_1.BudgetExchangeRateFilter;
import com.netsuite.webservices.platform.core_2018_1.ChangeEmail;
import com.netsuite.webservices.platform.core_2018_1.ChangePassword;
import com.netsuite.webservices.platform.core_2018_1.CurrencyRateFilter;
import com.netsuite.webservices.platform.core_2018_1.CustomizationType;
import com.netsuite.webservices.platform.core_2018_1.DeletionReason;
import com.netsuite.webservices.platform.core_2018_1.DetachReference;
import com.netsuite.webservices.platform.core_2018_1.GetAllRecord;
import com.netsuite.webservices.platform.core_2018_1.GetAllResult;
import com.netsuite.webservices.platform.core_2018_1.GetBudgetExchangeRateResult;
import com.netsuite.webservices.platform.core_2018_1.GetCurrencyRateResult;
import com.netsuite.webservices.platform.core_2018_1.GetCustomizationIdResult;
import com.netsuite.webservices.platform.core_2018_1.GetDataCenterUrlsResult;
import com.netsuite.webservices.platform.core_2018_1.GetDeletedFilter;
import com.netsuite.webservices.platform.core_2018_1.GetDeletedResult;
import com.netsuite.webservices.platform.core_2018_1.GetItemAvailabilityResult;
import com.netsuite.webservices.platform.core_2018_1.GetPostingTransactionSummaryResult;
import com.netsuite.webservices.platform.core_2018_1.GetSavedSearchRecord;
import com.netsuite.webservices.platform.core_2018_1.GetSavedSearchResult;
import com.netsuite.webservices.platform.core_2018_1.GetSelectValueFieldDescription;
import com.netsuite.webservices.platform.core_2018_1.GetSelectValueResult;
import com.netsuite.webservices.platform.core_2018_1.GetServerTimeResult;
import com.netsuite.webservices.platform.core_2018_1.InitializeRecord;
import com.netsuite.webservices.platform.core_2018_1.ItemAvailabilityFilter;
import com.netsuite.webservices.platform.core_2018_1.Passport;
import com.netsuite.webservices.platform.core_2018_1.PostingTransactionSummaryField;
import com.netsuite.webservices.platform.core_2018_1.PostingTransactionSummaryFilter;
import com.netsuite.webservices.platform.core_2018_1.Record;
import com.netsuite.webservices.platform.core_2018_1.SearchRecord;
import com.netsuite.webservices.platform.core_2018_1.SearchResult;
import com.netsuite.webservices.platform.core_2018_1.SsoCredentials;
import com.netsuite.webservices.platform.core_2018_1.SsoPassport;
import com.netsuite.webservices.platform.core_2018_1.UpdateInviteeStatusReference;
import com.netsuite.webservices.platform.messages_2018_1.AsyncResult;
import com.netsuite.webservices.platform.messages_2018_1.ReadResponse;
import com.netsuite.webservices.platform.messages_2018_1.ReadResponseList;
import com.netsuite.webservices.platform.messages_2018_1.SessionResponse;
import com.netsuite.webservices.platform.messages_2018_1.WriteResponse;
import com.netsuite.webservices.platform.messages_2018_1.WriteResponseList;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "NetSuitePortType", targetNamespace = "urn:platform_2018_1.webservices.netsuite.com")
@XmlSeeAlso({
    com.netsuite.webservices.activities.scheduling_2018_1.ObjectFactory.class,
    com.netsuite.webservices.documents.filecabinet_2018_1.ObjectFactory.class,
    com.netsuite.webservices.general.communication_2018_1.ObjectFactory.class,
    com.netsuite.webservices.lists.accounting_2018_1.ObjectFactory.class,
    com.netsuite.webservices.lists.employees_2018_1.ObjectFactory.class,
    com.netsuite.webservices.lists.marketing_2018_1.ObjectFactory.class,
    com.netsuite.webservices.lists.relationships_2018_1.ObjectFactory.class,
    com.netsuite.webservices.lists.supplychain_2018_1.ObjectFactory.class,
    com.netsuite.webservices.lists.support_2018_1.ObjectFactory.class,
    com.netsuite.webservices.lists.website_2018_1.ObjectFactory.class,
    com.netsuite.webservices.platform.common_2018_1.ObjectFactory.class,
    com.netsuite.webservices.platform.core_2018_1.ObjectFactory.class,
    com.netsuite.webservices.platform.faults_2018_1.ObjectFactory.class,
    com.netsuite.webservices.platform.messages_2018_1.ObjectFactory.class,
    com.netsuite.webservices.setup.customization_2018_1.ObjectFactory.class,
    com.netsuite.webservices.transactions.bank_2018_1.ObjectFactory.class,
    com.netsuite.webservices.transactions.customers_2018_1.ObjectFactory.class,
    com.netsuite.webservices.transactions.demandplanning_2018_1.ObjectFactory.class,
    com.netsuite.webservices.transactions.employees_2018_1.ObjectFactory.class,
    com.netsuite.webservices.transactions.financial_2018_1.ObjectFactory.class,
    com.netsuite.webservices.transactions.general_2018_1.ObjectFactory.class,
    com.netsuite.webservices.transactions.inventory_2018_1.ObjectFactory.class,
    com.netsuite.webservices.transactions.purchases_2018_1.ObjectFactory.class,
    com.netsuite.webservices.transactions.sales_2018_1.ObjectFactory.class,
    com.netsuite.webservices.platform.core_2018_1.types.ObjectFactory.class,
    com.netsuite.webservices.platform.faults_2018_1.types.ObjectFactory.class,
    com.netsuite.webservices.platform.common_2018_1.types.ObjectFactory.class,
    com.netsuite.webservices.activities.scheduling_2018_1.types.ObjectFactory.class,
    com.netsuite.webservices.general.communication_2018_1.types.ObjectFactory.class,
    com.netsuite.webservices.documents.filecabinet_2018_1.types.ObjectFactory.class,
    com.netsuite.webservices.lists.relationships_2018_1.types.ObjectFactory.class,
    com.netsuite.webservices.lists.support_2018_1.types.ObjectFactory.class,
    com.netsuite.webservices.lists.accounting_2018_1.types.ObjectFactory.class,
    com.netsuite.webservices.transactions.sales_2018_1.types.ObjectFactory.class,
    com.netsuite.webservices.transactions.purchases_2018_1.types.ObjectFactory.class,
    com.netsuite.webservices.transactions.customers_2018_1.types.ObjectFactory.class,
    com.netsuite.webservices.transactions.financial_2018_1.types.ObjectFactory.class,
    com.netsuite.webservices.transactions.inventory_2018_1.types.ObjectFactory.class,
    com.netsuite.webservices.setup.customization_2018_1.types.ObjectFactory.class,
    com.netsuite.webservices.lists.employees_2018_1.types.ObjectFactory.class,
    com.netsuite.webservices.transactions.employees_2018_1.types.ObjectFactory.class,
    com.netsuite.webservices.lists.marketing_2018_1.types.ObjectFactory.class,
    com.netsuite.webservices.transactions.demandplanning_2018_1.types.ObjectFactory.class,
    com.netsuite.webservices.lists.supplychain_2018_1.types.ObjectFactory.class
})
public interface NetSuitePortType {


    /**
     * 
     * @param passport
     * @return
     *     returns com.netsuite.webservices.platform.messages_2018_1.SessionResponse
     * @throws InsufficientPermissionFault
     * @throws InvalidCredentialsFault
     * @throws InvalidSessionFault
     * @throws InvalidAccountFault
     * @throws UnexpectedErrorFault
     * @throws InvalidVersionFault
     * @throws ExceededRequestLimitFault
     */
    @WebMethod(action = "login")
    @WebResult(name = "sessionResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "login", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.LoginRequest")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.LoginResponse")
    public SessionResponse login(
        @WebParam(name = "passport", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        Passport passport)
        throws ExceededRequestLimitFault, InsufficientPermissionFault, InvalidAccountFault, InvalidCredentialsFault, InvalidSessionFault, InvalidVersionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @param ssoPassport
     * @return
     *     returns com.netsuite.webservices.platform.messages_2018_1.SessionResponse
     * @throws InsufficientPermissionFault
     * @throws InvalidCredentialsFault
     * @throws InvalidSessionFault
     * @throws InvalidAccountFault
     * @throws UnexpectedErrorFault
     * @throws ExceededRequestLimitFault
     * @throws InvalidVersionFault
     */
    @WebMethod(action = "ssoLogin")
    @WebResult(name = "sessionResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "ssoLogin", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.SsoLoginRequest")
    @ResponseWrapper(localName = "ssoLoginResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.SsoLoginResponse")
    public SessionResponse ssoLogin(
        @WebParam(name = "ssoPassport", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        SsoPassport ssoPassport)
        throws ExceededRequestLimitFault, InsufficientPermissionFault, InvalidAccountFault, InvalidCredentialsFault, InvalidSessionFault, InvalidVersionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @param ssoCredentials
     * @return
     *     returns com.netsuite.webservices.platform.messages_2018_1.SessionResponse
     * @throws InsufficientPermissionFault
     * @throws InvalidCredentialsFault
     * @throws InvalidSessionFault
     * @throws InvalidAccountFault
     * @throws UnexpectedErrorFault
     * @throws InvalidVersionFault
     * @throws ExceededRequestLimitFault
     */
    @WebMethod(action = "mapSso")
    @WebResult(name = "sessionResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "mapSso", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.MapSsoRequest")
    @ResponseWrapper(localName = "mapSsoResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.MapSsoResponse")
    public SessionResponse mapSso(
        @WebParam(name = "ssoCredentials", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        SsoCredentials ssoCredentials)
        throws ExceededRequestLimitFault, InsufficientPermissionFault, InvalidAccountFault, InvalidCredentialsFault, InvalidSessionFault, InvalidVersionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @param changePassword
     * @return
     *     returns com.netsuite.webservices.platform.messages_2018_1.SessionResponse
     * @throws InsufficientPermissionFault
     * @throws InvalidCredentialsFault
     * @throws InvalidSessionFault
     * @throws InvalidAccountFault
     * @throws UnexpectedErrorFault
     * @throws InvalidVersionFault
     * @throws ExceededRequestLimitFault
     */
    @WebMethod(action = "changePassword")
    @WebResult(name = "sessionResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "changePassword", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.ChangePasswordRequest")
    @ResponseWrapper(localName = "changePasswordResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.ChangePasswordResponse")
    public SessionResponse changePassword(
        @WebParam(name = "changePassword", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        ChangePassword changePassword)
        throws ExceededRequestLimitFault, InsufficientPermissionFault, InvalidAccountFault, InvalidCredentialsFault, InvalidSessionFault, InvalidVersionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @param changeEmail
     * @return
     *     returns com.netsuite.webservices.platform.messages_2018_1.SessionResponse
     * @throws InsufficientPermissionFault
     * @throws InvalidCredentialsFault
     * @throws InvalidSessionFault
     * @throws InvalidAccountFault
     * @throws UnexpectedErrorFault
     * @throws ExceededRequestLimitFault
     * @throws InvalidVersionFault
     */
    @WebMethod(action = "changeEmail")
    @WebResult(name = "sessionResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "changeEmail", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.ChangeEmailRequest")
    @ResponseWrapper(localName = "changeEmailResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.ChangeEmailResponse")
    public SessionResponse changeEmail(
        @WebParam(name = "changeEmail", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        ChangeEmail changeEmail)
        throws ExceededRequestLimitFault, InsufficientPermissionFault, InvalidAccountFault, InvalidCredentialsFault, InvalidSessionFault, InvalidVersionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @return
     *     returns com.netsuite.webservices.platform.messages_2018_1.SessionResponse
     * @throws InsufficientPermissionFault
     * @throws InvalidCredentialsFault
     * @throws InvalidSessionFault
     * @throws UnexpectedErrorFault
     * @throws ExceededRequestLimitFault
     */
    @WebMethod(action = "logout")
    @WebResult(name = "sessionResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "logout", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.LogoutRequest")
    @ResponseWrapper(localName = "logoutResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.LogoutResponse")
    public SessionResponse logout()
        throws ExceededRequestLimitFault, InsufficientPermissionFault, InvalidCredentialsFault, InvalidSessionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @param record
     * @return
     *     returns com.netsuite.webservices.platform.messages_2018_1.WriteResponse
     * @throws InsufficientPermissionFault
     * @throws ExceededUsageLimitFault
     * @throws InvalidCredentialsFault
     * @throws InvalidSessionFault
     * @throws UnexpectedErrorFault
     * @throws ExceededConcurrentRequestLimitFault
     * @throws ExceededRecordCountFault
     * @throws ExceededRequestSizeFault
     * @throws ExceededRequestLimitFault
     */
    @WebMethod(action = "add")
    @WebResult(name = "writeResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "add", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.AddRequest")
    @ResponseWrapper(localName = "addResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.AddResponse")
    public WriteResponse add(
        @WebParam(name = "record", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        Record record)
        throws ExceededConcurrentRequestLimitFault, ExceededRecordCountFault, ExceededRequestLimitFault, ExceededRequestSizeFault, ExceededUsageLimitFault, InsufficientPermissionFault, InvalidCredentialsFault, InvalidSessionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @param deletionReason
     * @param baseRef
     * @return
     *     returns com.netsuite.webservices.platform.messages_2018_1.WriteResponse
     * @throws InsufficientPermissionFault
     * @throws ExceededUsageLimitFault
     * @throws InvalidCredentialsFault
     * @throws InvalidSessionFault
     * @throws ExceededConcurrentRequestLimitFault
     * @throws UnexpectedErrorFault
     * @throws ExceededRecordCountFault
     * @throws ExceededRequestSizeFault
     * @throws ExceededRequestLimitFault
     */
    @WebMethod(action = "delete")
    @WebResult(name = "writeResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "delete", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.DeleteRequest")
    @ResponseWrapper(localName = "deleteResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.DeleteResponse")
    public WriteResponse delete(
        @WebParam(name = "baseRef", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        BaseRef baseRef,
        @WebParam(name = "deletionReason", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        DeletionReason deletionReason)
        throws ExceededConcurrentRequestLimitFault, ExceededRecordCountFault, ExceededRequestLimitFault, ExceededRequestSizeFault, ExceededUsageLimitFault, InsufficientPermissionFault, InvalidCredentialsFault, InvalidSessionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @param searchRecord
     * @return
     *     returns com.netsuite.webservices.platform.core_2018_1.SearchResult
     * @throws InsufficientPermissionFault
     * @throws InvalidCredentialsFault
     * @throws ExceededUsageLimitFault
     * @throws InvalidSessionFault
     * @throws ExceededConcurrentRequestLimitFault
     * @throws UnexpectedErrorFault
     * @throws ExceededRecordCountFault
     * @throws ExceededRequestLimitFault
     * @throws ExceededRequestSizeFault
     */
    @WebMethod(action = "search")
    @WebResult(name = "searchResult", targetNamespace = "urn:core_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "search", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.SearchRequest")
    @ResponseWrapper(localName = "searchResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.SearchResponse")
    public SearchResult search(
        @WebParam(name = "searchRecord", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        SearchRecord searchRecord)
        throws ExceededConcurrentRequestLimitFault, ExceededRecordCountFault, ExceededRequestLimitFault, ExceededRequestSizeFault, ExceededUsageLimitFault, InsufficientPermissionFault, InvalidCredentialsFault, InvalidSessionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @param pageIndex
     * @return
     *     returns com.netsuite.webservices.platform.core_2018_1.SearchResult
     * @throws InsufficientPermissionFault
     * @throws ExceededUsageLimitFault
     * @throws InvalidCredentialsFault
     * @throws InvalidSessionFault
     * @throws ExceededConcurrentRequestLimitFault
     * @throws UnexpectedErrorFault
     * @throws ExceededRecordCountFault
     * @throws ExceededRequestSizeFault
     * @throws ExceededRequestLimitFault
     */
    @WebMethod(action = "searchMore")
    @WebResult(name = "searchResult", targetNamespace = "urn:core_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "searchMore", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.SearchMoreRequest")
    @ResponseWrapper(localName = "searchMoreResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.SearchMoreResponse")
    public SearchResult searchMore(
        @WebParam(name = "pageIndex", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        int pageIndex)
        throws ExceededConcurrentRequestLimitFault, ExceededRecordCountFault, ExceededRequestLimitFault, ExceededRequestSizeFault, ExceededUsageLimitFault, InsufficientPermissionFault, InvalidCredentialsFault, InvalidSessionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @param searchId
     * @param pageIndex
     * @return
     *     returns com.netsuite.webservices.platform.core_2018_1.SearchResult
     * @throws InsufficientPermissionFault
     * @throws InvalidCredentialsFault
     * @throws ExceededUsageLimitFault
     * @throws InvalidSessionFault
     * @throws ExceededConcurrentRequestLimitFault
     * @throws UnexpectedErrorFault
     * @throws ExceededRecordCountFault
     * @throws ExceededRequestSizeFault
     * @throws ExceededRequestLimitFault
     */
    @WebMethod(action = "searchMoreWithId")
    @WebResult(name = "searchResult", targetNamespace = "urn:core_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "searchMoreWithId", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.SearchMoreWithIdRequest")
    @ResponseWrapper(localName = "searchMoreWithIdResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.SearchMoreWithIdResponse")
    public SearchResult searchMoreWithId(
        @WebParam(name = "searchId", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        String searchId,
        @WebParam(name = "pageIndex", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        int pageIndex)
        throws ExceededConcurrentRequestLimitFault, ExceededRecordCountFault, ExceededRequestLimitFault, ExceededRequestSizeFault, ExceededUsageLimitFault, InsufficientPermissionFault, InvalidCredentialsFault, InvalidSessionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @return
     *     returns com.netsuite.webservices.platform.core_2018_1.SearchResult
     * @throws InsufficientPermissionFault
     * @throws InvalidCredentialsFault
     * @throws ExceededUsageLimitFault
     * @throws InvalidSessionFault
     * @throws UnexpectedErrorFault
     * @throws ExceededRecordCountFault
     * @throws ExceededRequestSizeFault
     * @throws ExceededRequestLimitFault
     */
    @WebMethod(action = "searchNext")
    @WebResult(name = "searchResult", targetNamespace = "urn:core_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "searchNext", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.SearchNextRequest")
    @ResponseWrapper(localName = "searchNextResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.SearchNextResponse")
    public SearchResult searchNext()
        throws ExceededRecordCountFault, ExceededRequestLimitFault, ExceededRequestSizeFault, ExceededUsageLimitFault, InsufficientPermissionFault, InvalidCredentialsFault, InvalidSessionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @param record
     * @return
     *     returns com.netsuite.webservices.platform.messages_2018_1.WriteResponse
     * @throws InsufficientPermissionFault
     * @throws ExceededUsageLimitFault
     * @throws InvalidCredentialsFault
     * @throws InvalidSessionFault
     * @throws ExceededConcurrentRequestLimitFault
     * @throws UnexpectedErrorFault
     * @throws ExceededRecordCountFault
     * @throws ExceededRequestLimitFault
     * @throws ExceededRequestSizeFault
     */
    @WebMethod(action = "update")
    @WebResult(name = "writeResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "update", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.UpdateRequest")
    @ResponseWrapper(localName = "updateResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.UpdateResponse")
    public WriteResponse update(
        @WebParam(name = "record", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        Record record)
        throws ExceededConcurrentRequestLimitFault, ExceededRecordCountFault, ExceededRequestLimitFault, ExceededRequestSizeFault, ExceededUsageLimitFault, InsufficientPermissionFault, InvalidCredentialsFault, InvalidSessionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @param record
     * @return
     *     returns com.netsuite.webservices.platform.messages_2018_1.WriteResponse
     * @throws InsufficientPermissionFault
     * @throws InvalidCredentialsFault
     * @throws ExceededUsageLimitFault
     * @throws InvalidSessionFault
     * @throws UnexpectedErrorFault
     * @throws ExceededConcurrentRequestLimitFault
     * @throws ExceededRecordCountFault
     * @throws ExceededRequestLimitFault
     * @throws ExceededRequestSizeFault
     */
    @WebMethod(action = "upsert")
    @WebResult(name = "writeResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "upsert", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.UpsertRequest")
    @ResponseWrapper(localName = "upsertResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.UpsertResponse")
    public WriteResponse upsert(
        @WebParam(name = "record", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        Record record)
        throws ExceededConcurrentRequestLimitFault, ExceededRecordCountFault, ExceededRequestLimitFault, ExceededRequestSizeFault, ExceededUsageLimitFault, InsufficientPermissionFault, InvalidCredentialsFault, InvalidSessionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @param record
     * @return
     *     returns com.netsuite.webservices.platform.messages_2018_1.WriteResponseList
     * @throws InsufficientPermissionFault
     * @throws ExceededUsageLimitFault
     * @throws InvalidCredentialsFault
     * @throws InvalidSessionFault
     * @throws ExceededConcurrentRequestLimitFault
     * @throws UnexpectedErrorFault
     * @throws ExceededRecordCountFault
     * @throws ExceededRequestLimitFault
     * @throws ExceededRequestSizeFault
     */
    @WebMethod(action = "addList")
    @WebResult(name = "writeResponseList", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "addList", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.AddListRequest")
    @ResponseWrapper(localName = "addListResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.AddListResponse")
    public WriteResponseList addList(
        @WebParam(name = "record", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        List<Record> record)
        throws ExceededConcurrentRequestLimitFault, ExceededRecordCountFault, ExceededRequestLimitFault, ExceededRequestSizeFault, ExceededUsageLimitFault, InsufficientPermissionFault, InvalidCredentialsFault, InvalidSessionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @param deletionReason
     * @param baseRef
     * @return
     *     returns com.netsuite.webservices.platform.messages_2018_1.WriteResponseList
     * @throws InsufficientPermissionFault
     * @throws InvalidCredentialsFault
     * @throws ExceededUsageLimitFault
     * @throws InvalidSessionFault
     * @throws UnexpectedErrorFault
     * @throws ExceededConcurrentRequestLimitFault
     * @throws ExceededRecordCountFault
     * @throws ExceededRequestSizeFault
     * @throws ExceededRequestLimitFault
     */
    @WebMethod(action = "deleteList")
    @WebResult(name = "writeResponseList", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "deleteList", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.DeleteListRequest")
    @ResponseWrapper(localName = "deleteListResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.DeleteListResponse")
    public WriteResponseList deleteList(
        @WebParam(name = "baseRef", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        List<BaseRef> baseRef,
        @WebParam(name = "deletionReason", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        DeletionReason deletionReason)
        throws ExceededConcurrentRequestLimitFault, ExceededRecordCountFault, ExceededRequestLimitFault, ExceededRequestSizeFault, ExceededUsageLimitFault, InsufficientPermissionFault, InvalidCredentialsFault, InvalidSessionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @param record
     * @return
     *     returns com.netsuite.webservices.platform.messages_2018_1.WriteResponseList
     * @throws InsufficientPermissionFault
     * @throws InvalidCredentialsFault
     * @throws ExceededUsageLimitFault
     * @throws InvalidSessionFault
     * @throws ExceededConcurrentRequestLimitFault
     * @throws UnexpectedErrorFault
     * @throws ExceededRecordCountFault
     * @throws ExceededRequestLimitFault
     * @throws ExceededRequestSizeFault
     */
    @WebMethod(action = "updateList")
    @WebResult(name = "writeResponseList", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "updateList", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.UpdateListRequest")
    @ResponseWrapper(localName = "updateListResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.UpdateListResponse")
    public WriteResponseList updateList(
        @WebParam(name = "record", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        List<Record> record)
        throws ExceededConcurrentRequestLimitFault, ExceededRecordCountFault, ExceededRequestLimitFault, ExceededRequestSizeFault, ExceededUsageLimitFault, InsufficientPermissionFault, InvalidCredentialsFault, InvalidSessionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @param record
     * @return
     *     returns com.netsuite.webservices.platform.messages_2018_1.WriteResponseList
     * @throws InsufficientPermissionFault
     * @throws InvalidCredentialsFault
     * @throws ExceededUsageLimitFault
     * @throws InvalidSessionFault
     * @throws ExceededConcurrentRequestLimitFault
     * @throws UnexpectedErrorFault
     * @throws ExceededRecordCountFault
     * @throws ExceededRequestLimitFault
     * @throws ExceededRequestSizeFault
     */
    @WebMethod(action = "upsertList")
    @WebResult(name = "writeResponseList", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "upsertList", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.UpsertListRequest")
    @ResponseWrapper(localName = "upsertListResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.UpsertListResponse")
    public WriteResponseList upsertList(
        @WebParam(name = "record", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        List<Record> record)
        throws ExceededConcurrentRequestLimitFault, ExceededRecordCountFault, ExceededRequestLimitFault, ExceededRequestSizeFault, ExceededUsageLimitFault, InsufficientPermissionFault, InvalidCredentialsFault, InvalidSessionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @param baseRef
     * @return
     *     returns com.netsuite.webservices.platform.messages_2018_1.ReadResponse
     * @throws InsufficientPermissionFault
     * @throws InvalidCredentialsFault
     * @throws ExceededUsageLimitFault
     * @throws InvalidSessionFault
     * @throws UnexpectedErrorFault
     * @throws ExceededConcurrentRequestLimitFault
     * @throws ExceededRecordCountFault
     * @throws ExceededRequestLimitFault
     * @throws ExceededRequestSizeFault
     */
    @WebMethod(action = "get")
    @WebResult(name = "readResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "get", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.GetRequest")
    @ResponseWrapper(localName = "getResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.GetResponse")
    public ReadResponse get(
        @WebParam(name = "baseRef", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        BaseRef baseRef)
        throws ExceededConcurrentRequestLimitFault, ExceededRecordCountFault, ExceededRequestLimitFault, ExceededRequestSizeFault, ExceededUsageLimitFault, InsufficientPermissionFault, InvalidCredentialsFault, InvalidSessionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @param baseRef
     * @return
     *     returns com.netsuite.webservices.platform.messages_2018_1.ReadResponseList
     * @throws InsufficientPermissionFault
     * @throws ExceededUsageLimitFault
     * @throws InvalidCredentialsFault
     * @throws InvalidSessionFault
     * @throws ExceededConcurrentRequestLimitFault
     * @throws UnexpectedErrorFault
     * @throws ExceededRecordCountFault
     * @throws ExceededRequestLimitFault
     * @throws ExceededRequestSizeFault
     */
    @WebMethod(action = "getList")
    @WebResult(name = "readResponseList", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "getList", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.GetListRequest")
    @ResponseWrapper(localName = "getListResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.GetListResponse")
    public ReadResponseList getList(
        @WebParam(name = "baseRef", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        List<BaseRef> baseRef)
        throws ExceededConcurrentRequestLimitFault, ExceededRecordCountFault, ExceededRequestLimitFault, ExceededRequestSizeFault, ExceededUsageLimitFault, InsufficientPermissionFault, InvalidCredentialsFault, InvalidSessionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @param record
     * @return
     *     returns com.netsuite.webservices.platform.core_2018_1.GetAllResult
     * @throws InsufficientPermissionFault
     * @throws ExceededUsageLimitFault
     * @throws InvalidCredentialsFault
     * @throws InvalidSessionFault
     * @throws ExceededConcurrentRequestLimitFault
     * @throws UnexpectedErrorFault
     * @throws ExceededRecordCountFault
     * @throws ExceededRequestSizeFault
     * @throws ExceededRequestLimitFault
     */
    @WebMethod(action = "getAll")
    @WebResult(name = "getAllResult", targetNamespace = "urn:core_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "getAll", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.GetAllRequest")
    @ResponseWrapper(localName = "getAllResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.GetAllResponse")
    public GetAllResult getAll(
        @WebParam(name = "record", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        GetAllRecord record)
        throws ExceededConcurrentRequestLimitFault, ExceededRecordCountFault, ExceededRequestLimitFault, ExceededRequestSizeFault, ExceededUsageLimitFault, InsufficientPermissionFault, InvalidCredentialsFault, InvalidSessionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @param record
     * @return
     *     returns com.netsuite.webservices.platform.core_2018_1.GetSavedSearchResult
     * @throws InsufficientPermissionFault
     * @throws ExceededUsageLimitFault
     * @throws InvalidCredentialsFault
     * @throws InvalidSessionFault
     * @throws ExceededConcurrentRequestLimitFault
     * @throws UnexpectedErrorFault
     * @throws ExceededRecordCountFault
     * @throws ExceededRequestSizeFault
     * @throws ExceededRequestLimitFault
     */
    @WebMethod(action = "getSavedSearch")
    @WebResult(name = "getSavedSearchResult", targetNamespace = "urn:core_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "getSavedSearch", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.GetSavedSearchRequest")
    @ResponseWrapper(localName = "getSavedSearchResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.GetSavedSearchResponse")
    public GetSavedSearchResult getSavedSearch(
        @WebParam(name = "record", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        GetSavedSearchRecord record)
        throws ExceededConcurrentRequestLimitFault, ExceededRecordCountFault, ExceededRequestLimitFault, ExceededRequestSizeFault, ExceededUsageLimitFault, InsufficientPermissionFault, InvalidCredentialsFault, InvalidSessionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @param includeInactives
     * @param customizationType
     * @return
     *     returns com.netsuite.webservices.platform.core_2018_1.GetCustomizationIdResult
     * @throws InsufficientPermissionFault
     * @throws ExceededUsageLimitFault
     * @throws InvalidCredentialsFault
     * @throws InvalidSessionFault
     * @throws UnexpectedErrorFault
     * @throws ExceededConcurrentRequestLimitFault
     * @throws ExceededRecordCountFault
     * @throws ExceededRequestSizeFault
     * @throws ExceededRequestLimitFault
     */
    @WebMethod(action = "getCustomizationId")
    @WebResult(name = "getCustomizationIdResult", targetNamespace = "urn:core_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "getCustomizationId", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.GetCustomizationIdRequest")
    @ResponseWrapper(localName = "getCustomizationIdResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.GetCustomizationIdResponse")
    public GetCustomizationIdResult getCustomizationId(
        @WebParam(name = "customizationType", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        CustomizationType customizationType,
        @WebParam(name = "includeInactives", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        boolean includeInactives)
        throws ExceededConcurrentRequestLimitFault, ExceededRecordCountFault, ExceededRequestLimitFault, ExceededRequestSizeFault, ExceededUsageLimitFault, InsufficientPermissionFault, InvalidCredentialsFault, InvalidSessionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @param initializeRecord
     * @return
     *     returns com.netsuite.webservices.platform.messages_2018_1.ReadResponse
     * @throws InsufficientPermissionFault
     * @throws InvalidCredentialsFault
     * @throws ExceededUsageLimitFault
     * @throws InvalidSessionFault
     * @throws UnexpectedErrorFault
     * @throws ExceededConcurrentRequestLimitFault
     * @throws ExceededRecordCountFault
     * @throws ExceededRequestSizeFault
     * @throws ExceededRequestLimitFault
     */
    @WebMethod(action = "initialize")
    @WebResult(name = "readResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "initialize", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.InitializeRequest")
    @ResponseWrapper(localName = "initializeResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.InitializeResponse")
    public ReadResponse initialize(
        @WebParam(name = "initializeRecord", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        InitializeRecord initializeRecord)
        throws ExceededConcurrentRequestLimitFault, ExceededRecordCountFault, ExceededRequestLimitFault, ExceededRequestSizeFault, ExceededUsageLimitFault, InsufficientPermissionFault, InvalidCredentialsFault, InvalidSessionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @param initializeRecord
     * @return
     *     returns com.netsuite.webservices.platform.messages_2018_1.ReadResponseList
     * @throws InsufficientPermissionFault
     * @throws InvalidCredentialsFault
     * @throws ExceededUsageLimitFault
     * @throws InvalidSessionFault
     * @throws UnexpectedErrorFault
     * @throws ExceededConcurrentRequestLimitFault
     * @throws ExceededRecordCountFault
     * @throws ExceededRequestSizeFault
     * @throws ExceededRequestLimitFault
     */
    @WebMethod(action = "initializeList")
    @WebResult(name = "readResponseList", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "initializeList", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.InitializeListRequest")
    @ResponseWrapper(localName = "initializeListResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.InitializeListResponse")
    public ReadResponseList initializeList(
        @WebParam(name = "initializeRecord", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        List<InitializeRecord> initializeRecord)
        throws ExceededConcurrentRequestLimitFault, ExceededRecordCountFault, ExceededRequestLimitFault, ExceededRequestSizeFault, ExceededUsageLimitFault, InsufficientPermissionFault, InvalidCredentialsFault, InvalidSessionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @param pageIndex
     * @param fieldDescription
     * @return
     *     returns com.netsuite.webservices.platform.core_2018_1.GetSelectValueResult
     * @throws InsufficientPermissionFault
     * @throws ExceededUsageLimitFault
     * @throws InvalidCredentialsFault
     * @throws InvalidSessionFault
     * @throws UnexpectedErrorFault
     * @throws ExceededConcurrentRequestLimitFault
     * @throws ExceededRecordCountFault
     * @throws ExceededRequestSizeFault
     * @throws ExceededRequestLimitFault
     */
    @WebMethod(action = "getSelectValue")
    @WebResult(name = "getSelectValueResult", targetNamespace = "urn:core_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "getSelectValue", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.GetSelectValueRequest")
    @ResponseWrapper(localName = "getSelectValueResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.GetSelectValueResponse")
    public GetSelectValueResult getSelectValue(
        @WebParam(name = "fieldDescription", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        GetSelectValueFieldDescription fieldDescription,
        @WebParam(name = "pageIndex", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        int pageIndex)
        throws ExceededConcurrentRequestLimitFault, ExceededRecordCountFault, ExceededRequestLimitFault, ExceededRequestSizeFault, ExceededUsageLimitFault, InsufficientPermissionFault, InvalidCredentialsFault, InvalidSessionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @param itemAvailabilityFilter
     * @return
     *     returns com.netsuite.webservices.platform.core_2018_1.GetItemAvailabilityResult
     * @throws InsufficientPermissionFault
     * @throws ExceededUsageLimitFault
     * @throws InvalidCredentialsFault
     * @throws InvalidSessionFault
     * @throws ExceededConcurrentRequestLimitFault
     * @throws UnexpectedErrorFault
     * @throws ExceededRecordCountFault
     * @throws ExceededRequestLimitFault
     * @throws ExceededRequestSizeFault
     */
    @WebMethod(action = "getItemAvailability")
    @WebResult(name = "getItemAvailabilityResult", targetNamespace = "urn:core_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "getItemAvailability", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.GetItemAvailabilityRequest")
    @ResponseWrapper(localName = "getItemAvailabilityResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.GetItemAvailabilityResponse")
    public GetItemAvailabilityResult getItemAvailability(
        @WebParam(name = "itemAvailabilityFilter", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        ItemAvailabilityFilter itemAvailabilityFilter)
        throws ExceededConcurrentRequestLimitFault, ExceededRecordCountFault, ExceededRequestLimitFault, ExceededRequestSizeFault, ExceededUsageLimitFault, InsufficientPermissionFault, InvalidCredentialsFault, InvalidSessionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @param budgetExchangeRateFilter
     * @return
     *     returns com.netsuite.webservices.platform.core_2018_1.GetBudgetExchangeRateResult
     * @throws InsufficientPermissionFault
     * @throws InvalidCredentialsFault
     * @throws ExceededUsageLimitFault
     * @throws InvalidSessionFault
     * @throws ExceededConcurrentRequestLimitFault
     * @throws UnexpectedErrorFault
     * @throws ExceededRecordCountFault
     * @throws ExceededRequestLimitFault
     * @throws ExceededRequestSizeFault
     */
    @WebMethod(action = "getBudgetExchangeRate")
    @WebResult(name = "getBudgetExchangeRateResult", targetNamespace = "urn:core_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "getBudgetExchangeRate", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.GetBudgetExchangeRateRequest")
    @ResponseWrapper(localName = "getBudgetExchangeRateResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.GetBudgetExchangeRateResponse")
    public GetBudgetExchangeRateResult getBudgetExchangeRate(
        @WebParam(name = "budgetExchangeRateFilter", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        BudgetExchangeRateFilter budgetExchangeRateFilter)
        throws ExceededConcurrentRequestLimitFault, ExceededRecordCountFault, ExceededRequestLimitFault, ExceededRequestSizeFault, ExceededUsageLimitFault, InsufficientPermissionFault, InvalidCredentialsFault, InvalidSessionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @param currencyRateFilter
     * @return
     *     returns com.netsuite.webservices.platform.core_2018_1.GetCurrencyRateResult
     * @throws InsufficientPermissionFault
     * @throws InvalidCredentialsFault
     * @throws ExceededUsageLimitFault
     * @throws InvalidSessionFault
     * @throws ExceededConcurrentRequestLimitFault
     * @throws UnexpectedErrorFault
     * @throws ExceededRecordCountFault
     * @throws ExceededRequestLimitFault
     * @throws ExceededRequestSizeFault
     */
    @WebMethod(action = "getCurrencyRate")
    @WebResult(name = "getCurrencyRateResult", targetNamespace = "urn:core_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "getCurrencyRate", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.GetCurrencyRateRequest")
    @ResponseWrapper(localName = "getCurrencyRateResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.GetCurrencyRateResponse")
    public GetCurrencyRateResult getCurrencyRate(
        @WebParam(name = "currencyRateFilter", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        CurrencyRateFilter currencyRateFilter)
        throws ExceededConcurrentRequestLimitFault, ExceededRecordCountFault, ExceededRequestLimitFault, ExceededRequestSizeFault, ExceededUsageLimitFault, InsufficientPermissionFault, InvalidCredentialsFault, InvalidSessionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @param account
     * @return
     *     returns com.netsuite.webservices.platform.core_2018_1.GetDataCenterUrlsResult
     * @throws InsufficientPermissionFault
     * @throws InvalidCredentialsFault
     * @throws InvalidSessionFault
     * @throws UnexpectedErrorFault
     * @throws ExceededRequestSizeFault
     */
    @WebMethod(action = "getDataCenterUrls")
    @WebResult(name = "getDataCenterUrlsResult", targetNamespace = "urn:core_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "getDataCenterUrls", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.GetDataCenterUrlsRequest")
    @ResponseWrapper(localName = "getDataCenterUrlsResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.GetDataCenterUrlsResponse")
    public GetDataCenterUrlsResult getDataCenterUrls(
        @WebParam(name = "account", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        String account)
        throws ExceededRequestSizeFault, InsufficientPermissionFault, InvalidCredentialsFault, InvalidSessionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @param pageIndex
     * @param operationId
     * @param filters
     * @param fields
     * @return
     *     returns com.netsuite.webservices.platform.core_2018_1.GetPostingTransactionSummaryResult
     * @throws InsufficientPermissionFault
     * @throws InvalidCredentialsFault
     * @throws ExceededUsageLimitFault
     * @throws InvalidSessionFault
     * @throws ExceededConcurrentRequestLimitFault
     * @throws UnexpectedErrorFault
     * @throws ExceededRecordCountFault
     * @throws ExceededRequestLimitFault
     * @throws ExceededRequestSizeFault
     */
    @WebMethod(action = "getPostingTransactionSummary")
    @WebResult(name = "getPostingTransactionSummaryResult", targetNamespace = "urn:core_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "getPostingTransactionSummary", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.GetPostingTransactionSummaryRequest")
    @ResponseWrapper(localName = "getPostingTransactionSummaryResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.GetPostingTransactionSummaryResponse")
    public GetPostingTransactionSummaryResult getPostingTransactionSummary(
        @WebParam(name = "fields", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        PostingTransactionSummaryField fields,
        @WebParam(name = "filters", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        PostingTransactionSummaryFilter filters,
        @WebParam(name = "pageIndex", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        int pageIndex,
        @WebParam(name = "operationId", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        String operationId)
        throws ExceededConcurrentRequestLimitFault, ExceededRecordCountFault, ExceededRequestLimitFault, ExceededRequestSizeFault, ExceededUsageLimitFault, InsufficientPermissionFault, InvalidCredentialsFault, InvalidSessionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @return
     *     returns com.netsuite.webservices.platform.core_2018_1.GetServerTimeResult
     * @throws InsufficientPermissionFault
     * @throws ExceededUsageLimitFault
     * @throws InvalidCredentialsFault
     * @throws InvalidSessionFault
     * @throws UnexpectedErrorFault
     * @throws ExceededConcurrentRequestLimitFault
     * @throws ExceededRequestLimitFault
     */
    @WebMethod(action = "getServerTime")
    @WebResult(name = "getServerTimeResult", targetNamespace = "urn:core_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "getServerTime", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.GetServerTimeRequest")
    @ResponseWrapper(localName = "getServerTimeResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.GetServerTimeResponse")
    public GetServerTimeResult getServerTime()
        throws ExceededConcurrentRequestLimitFault, ExceededRequestLimitFault, ExceededUsageLimitFault, InsufficientPermissionFault, InvalidCredentialsFault, InvalidSessionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @param attachReference
     * @return
     *     returns com.netsuite.webservices.platform.messages_2018_1.WriteResponse
     * @throws InsufficientPermissionFault
     * @throws ExceededUsageLimitFault
     * @throws InvalidCredentialsFault
     * @throws InvalidSessionFault
     * @throws ExceededConcurrentRequestLimitFault
     * @throws UnexpectedErrorFault
     * @throws ExceededRecordCountFault
     * @throws ExceededRequestSizeFault
     * @throws ExceededRequestLimitFault
     */
    @WebMethod(action = "attach")
    @WebResult(name = "writeResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "attach", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.AttachRequest")
    @ResponseWrapper(localName = "attachResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.AttachResponse")
    public WriteResponse attach(
        @WebParam(name = "attachReference", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        AttachReference attachReference)
        throws ExceededConcurrentRequestLimitFault, ExceededRecordCountFault, ExceededRequestLimitFault, ExceededRequestSizeFault, ExceededUsageLimitFault, InsufficientPermissionFault, InvalidCredentialsFault, InvalidSessionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @param detachReference
     * @return
     *     returns com.netsuite.webservices.platform.messages_2018_1.WriteResponse
     * @throws InsufficientPermissionFault
     * @throws ExceededUsageLimitFault
     * @throws InvalidCredentialsFault
     * @throws InvalidSessionFault
     * @throws UnexpectedErrorFault
     * @throws ExceededConcurrentRequestLimitFault
     * @throws ExceededRecordCountFault
     * @throws ExceededRequestSizeFault
     * @throws ExceededRequestLimitFault
     */
    @WebMethod(action = "detach")
    @WebResult(name = "writeResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "detach", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.DetachRequest")
    @ResponseWrapper(localName = "detachResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.DetachResponse")
    public WriteResponse detach(
        @WebParam(name = "detachReference", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        DetachReference detachReference)
        throws ExceededConcurrentRequestLimitFault, ExceededRecordCountFault, ExceededRequestLimitFault, ExceededRequestSizeFault, ExceededUsageLimitFault, InsufficientPermissionFault, InvalidCredentialsFault, InvalidSessionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @param updateInviteeStatusReference
     * @return
     *     returns com.netsuite.webservices.platform.messages_2018_1.WriteResponse
     * @throws InsufficientPermissionFault
     * @throws InvalidCredentialsFault
     * @throws ExceededUsageLimitFault
     * @throws InvalidSessionFault
     * @throws UnexpectedErrorFault
     * @throws ExceededConcurrentRequestLimitFault
     * @throws ExceededRecordCountFault
     * @throws ExceededRequestLimitFault
     * @throws ExceededRequestSizeFault
     */
    @WebMethod(action = "updateInviteeStatus")
    @WebResult(name = "writeResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "updateInviteeStatus", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.UpdateInviteeStatusRequest")
    @ResponseWrapper(localName = "updateInviteeStatusResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.UpdateInviteeStatusResponse")
    public WriteResponse updateInviteeStatus(
        @WebParam(name = "updateInviteeStatusReference", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        UpdateInviteeStatusReference updateInviteeStatusReference)
        throws ExceededConcurrentRequestLimitFault, ExceededRecordCountFault, ExceededRequestLimitFault, ExceededRequestSizeFault, ExceededUsageLimitFault, InsufficientPermissionFault, InvalidCredentialsFault, InvalidSessionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @param updateInviteeStatusReference
     * @return
     *     returns com.netsuite.webservices.platform.messages_2018_1.WriteResponseList
     * @throws InsufficientPermissionFault
     * @throws ExceededUsageLimitFault
     * @throws InvalidCredentialsFault
     * @throws InvalidSessionFault
     * @throws ExceededConcurrentRequestLimitFault
     * @throws UnexpectedErrorFault
     * @throws ExceededRecordCountFault
     * @throws ExceededRequestLimitFault
     * @throws ExceededRequestSizeFault
     */
    @WebMethod(action = "updateInviteeStatusList")
    @WebResult(name = "writeResponseList", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "updateInviteeStatusList", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.UpdateInviteeStatusListRequest")
    @ResponseWrapper(localName = "updateInviteeStatusListResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.UpdateInviteeStatusListResponse")
    public WriteResponseList updateInviteeStatusList(
        @WebParam(name = "updateInviteeStatusReference", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        List<UpdateInviteeStatusReference> updateInviteeStatusReference)
        throws ExceededConcurrentRequestLimitFault, ExceededRecordCountFault, ExceededRequestLimitFault, ExceededRequestSizeFault, ExceededUsageLimitFault, InsufficientPermissionFault, InvalidCredentialsFault, InvalidSessionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @param record
     * @return
     *     returns com.netsuite.webservices.platform.core_2018_1.AsyncStatusResult
     * @throws InsufficientPermissionFault
     * @throws InvalidCredentialsFault
     * @throws InvalidSessionFault
     * @throws ExceededConcurrentRequestLimitFault
     * @throws UnexpectedErrorFault
     * @throws ExceededRecordCountFault
     * @throws ExceededRequestSizeFault
     * @throws ExceededRequestLimitFault
     */
    @WebMethod(action = "asyncAddList")
    @WebResult(name = "asyncStatusResult", targetNamespace = "urn:core_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "asyncAddList", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.AsyncAddListRequest")
    @ResponseWrapper(localName = "asyncAddListResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.AsyncStatusResponse")
    public AsyncStatusResult asyncAddList(
        @WebParam(name = "record", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        List<Record> record)
        throws ExceededConcurrentRequestLimitFault, ExceededRecordCountFault, ExceededRequestLimitFault, ExceededRequestSizeFault, InsufficientPermissionFault, InvalidCredentialsFault, InvalidSessionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @param record
     * @return
     *     returns com.netsuite.webservices.platform.core_2018_1.AsyncStatusResult
     * @throws InsufficientPermissionFault
     * @throws InvalidCredentialsFault
     * @throws InvalidSessionFault
     * @throws UnexpectedErrorFault
     * @throws ExceededConcurrentRequestLimitFault
     * @throws ExceededRecordCountFault
     * @throws ExceededRequestSizeFault
     * @throws ExceededRequestLimitFault
     */
    @WebMethod(action = "asyncUpdateList")
    @WebResult(name = "asyncStatusResult", targetNamespace = "urn:core_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "asyncUpdateList", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.AsyncUpdateListRequest")
    @ResponseWrapper(localName = "asyncUpdateListResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.AsyncStatusResponse")
    public AsyncStatusResult asyncUpdateList(
        @WebParam(name = "record", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        List<Record> record)
        throws ExceededConcurrentRequestLimitFault, ExceededRecordCountFault, ExceededRequestLimitFault, ExceededRequestSizeFault, InsufficientPermissionFault, InvalidCredentialsFault, InvalidSessionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @param record
     * @return
     *     returns com.netsuite.webservices.platform.core_2018_1.AsyncStatusResult
     * @throws InsufficientPermissionFault
     * @throws InvalidCredentialsFault
     * @throws InvalidSessionFault
     * @throws UnexpectedErrorFault
     * @throws ExceededConcurrentRequestLimitFault
     * @throws ExceededRecordCountFault
     * @throws ExceededRequestLimitFault
     * @throws ExceededRequestSizeFault
     */
    @WebMethod(action = "asyncUpsertList")
    @WebResult(name = "asyncStatusResult", targetNamespace = "urn:core_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "asyncUpsertList", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.AsyncUpsertListRequest")
    @ResponseWrapper(localName = "asyncUpsertListResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.AsyncStatusResponse")
    public AsyncStatusResult asyncUpsertList(
        @WebParam(name = "record", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        List<Record> record)
        throws ExceededConcurrentRequestLimitFault, ExceededRecordCountFault, ExceededRequestLimitFault, ExceededRequestSizeFault, InsufficientPermissionFault, InvalidCredentialsFault, InvalidSessionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @param deletionReason
     * @param baseRef
     * @return
     *     returns com.netsuite.webservices.platform.core_2018_1.AsyncStatusResult
     * @throws InsufficientPermissionFault
     * @throws InvalidCredentialsFault
     * @throws InvalidSessionFault
     * @throws UnexpectedErrorFault
     * @throws ExceededConcurrentRequestLimitFault
     * @throws ExceededRecordCountFault
     * @throws ExceededRequestLimitFault
     * @throws ExceededRequestSizeFault
     */
    @WebMethod(action = "asyncDeleteList")
    @WebResult(name = "asyncStatusResult", targetNamespace = "urn:core_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "asyncDeleteList", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.AsyncDeleteListRequest")
    @ResponseWrapper(localName = "asyncDeleteListResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.AsyncStatusResponse")
    public AsyncStatusResult asyncDeleteList(
        @WebParam(name = "baseRef", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        List<BaseRef> baseRef,
        @WebParam(name = "deletionReason", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        DeletionReason deletionReason)
        throws ExceededConcurrentRequestLimitFault, ExceededRecordCountFault, ExceededRequestLimitFault, ExceededRequestSizeFault, InsufficientPermissionFault, InvalidCredentialsFault, InvalidSessionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @param baseRef
     * @return
     *     returns com.netsuite.webservices.platform.core_2018_1.AsyncStatusResult
     * @throws InsufficientPermissionFault
     * @throws InvalidCredentialsFault
     * @throws InvalidSessionFault
     * @throws ExceededConcurrentRequestLimitFault
     * @throws UnexpectedErrorFault
     * @throws ExceededRecordCountFault
     * @throws ExceededRequestSizeFault
     * @throws ExceededRequestLimitFault
     */
    @WebMethod(action = "asyncGetList")
    @WebResult(name = "asyncStatusResult", targetNamespace = "urn:core_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "asyncGetList", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.AsyncGetListRequest")
    @ResponseWrapper(localName = "asyncGetListResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.AsyncStatusResponse")
    public AsyncStatusResult asyncGetList(
        @WebParam(name = "baseRef", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        List<BaseRef> baseRef)
        throws ExceededConcurrentRequestLimitFault, ExceededRecordCountFault, ExceededRequestLimitFault, ExceededRequestSizeFault, InsufficientPermissionFault, InvalidCredentialsFault, InvalidSessionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @param initializeRecord
     * @return
     *     returns com.netsuite.webservices.platform.core_2018_1.AsyncStatusResult
     * @throws InsufficientPermissionFault
     * @throws ExceededUsageLimitFault
     * @throws InvalidCredentialsFault
     * @throws InvalidSessionFault
     * @throws UnexpectedErrorFault
     * @throws ExceededConcurrentRequestLimitFault
     * @throws ExceededRecordCountFault
     * @throws ExceededRequestLimitFault
     * @throws ExceededRequestSizeFault
     */
    @WebMethod(action = "asyncInitializeList")
    @WebResult(name = "asyncStatusResult", targetNamespace = "urn:core_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "asyncInitializeList", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.AsyncInitializeListRequest")
    @ResponseWrapper(localName = "asyncInitializeListResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.AsyncStatusResponse")
    public AsyncStatusResult asyncInitializeList(
        @WebParam(name = "initializeRecord", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        List<InitializeRecord> initializeRecord)
        throws ExceededConcurrentRequestLimitFault, ExceededRecordCountFault, ExceededRequestLimitFault, ExceededRequestSizeFault, ExceededUsageLimitFault, InsufficientPermissionFault, InvalidCredentialsFault, InvalidSessionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @param searchRecord
     * @return
     *     returns com.netsuite.webservices.platform.core_2018_1.AsyncStatusResult
     * @throws InsufficientPermissionFault
     * @throws InvalidCredentialsFault
     * @throws InvalidSessionFault
     * @throws UnexpectedErrorFault
     * @throws ExceededConcurrentRequestLimitFault
     * @throws ExceededRecordCountFault
     * @throws ExceededRequestLimitFault
     * @throws ExceededRequestSizeFault
     */
    @WebMethod(action = "asyncSearch")
    @WebResult(name = "asyncStatusResult", targetNamespace = "urn:core_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "asyncSearch", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.AsyncSearchRequest")
    @ResponseWrapper(localName = "asyncSearchResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.AsyncStatusResponse")
    public AsyncStatusResult asyncSearch(
        @WebParam(name = "searchRecord", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        SearchRecord searchRecord)
        throws ExceededConcurrentRequestLimitFault, ExceededRecordCountFault, ExceededRequestLimitFault, ExceededRequestSizeFault, InsufficientPermissionFault, InvalidCredentialsFault, InvalidSessionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @param jobId
     * @param pageIndex
     * @return
     *     returns com.netsuite.webservices.platform.messages_2018_1.AsyncResult
     * @throws AsyncFault
     * @throws InsufficientPermissionFault
     * @throws InvalidCredentialsFault
     * @throws ExceededUsageLimitFault
     * @throws InvalidSessionFault
     * @throws ExceededConcurrentRequestLimitFault
     * @throws UnexpectedErrorFault
     * @throws ExceededRecordCountFault
     * @throws ExceededRequestLimitFault
     * @throws ExceededRequestSizeFault
     */
    @WebMethod(action = "getAsyncResult")
    @WebResult(name = "asyncResult", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "getAsyncResult", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.GetAsyncResultRequest")
    @ResponseWrapper(localName = "getAsyncResultResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.GetAsyncResultResponse")
    public AsyncResult getAsyncResult(
        @WebParam(name = "jobId", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        String jobId,
        @WebParam(name = "pageIndex", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        int pageIndex)
        throws AsyncFault, ExceededConcurrentRequestLimitFault, ExceededRecordCountFault, ExceededRequestLimitFault, ExceededRequestSizeFault, ExceededUsageLimitFault, InsufficientPermissionFault, InvalidCredentialsFault, InvalidSessionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @param jobId
     * @return
     *     returns com.netsuite.webservices.platform.core_2018_1.AsyncStatusResult
     * @throws AsyncFault
     * @throws InsufficientPermissionFault
     * @throws InvalidCredentialsFault
     * @throws InvalidSessionFault
     * @throws UnexpectedErrorFault
     * @throws ExceededConcurrentRequestLimitFault
     * @throws ExceededRequestLimitFault
     */
    @WebMethod(action = "checkAsyncStatus")
    @WebResult(name = "asyncStatusResult", targetNamespace = "urn:core_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "checkAsyncStatus", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.CheckAsyncStatusRequest")
    @ResponseWrapper(localName = "checkAsyncStatusResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.AsyncStatusResponse")
    public AsyncStatusResult checkAsyncStatus(
        @WebParam(name = "jobId", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        String jobId)
        throws AsyncFault, ExceededConcurrentRequestLimitFault, ExceededRequestLimitFault, InsufficientPermissionFault, InvalidCredentialsFault, InvalidSessionFault, UnexpectedErrorFault
    ;

    /**
     * 
     * @param getDeletedFilter
     * @param pageIndex
     * @return
     *     returns com.netsuite.webservices.platform.core_2018_1.GetDeletedResult
     * @throws InsufficientPermissionFault
     * @throws InvalidCredentialsFault
     * @throws ExceededUsageLimitFault
     * @throws InvalidSessionFault
     * @throws ExceededConcurrentRequestLimitFault
     * @throws UnexpectedErrorFault
     * @throws ExceededRecordCountFault
     * @throws ExceededRequestSizeFault
     * @throws ExceededRequestLimitFault
     */
    @WebMethod(action = "getDeleted")
    @WebResult(name = "getDeletedResult", targetNamespace = "urn:core_2018_1.platform.webservices.netsuite.com")
    @RequestWrapper(localName = "getDeleted", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.GetDeletedRequest")
    @ResponseWrapper(localName = "getDeletedResponse", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com", className = "com.netsuite.webservices.platform.messages_2018_1.GetDeletedResponse")
    public GetDeletedResult getDeleted(
        @WebParam(name = "getDeletedFilter", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        GetDeletedFilter getDeletedFilter,
        @WebParam(name = "pageIndex", targetNamespace = "urn:messages_2018_1.platform.webservices.netsuite.com")
        int pageIndex)
        throws ExceededConcurrentRequestLimitFault, ExceededRecordCountFault, ExceededRequestLimitFault, ExceededRequestSizeFault, ExceededUsageLimitFault, InsufficientPermissionFault, InvalidCredentialsFault, InvalidSessionFault, UnexpectedErrorFault
    ;

}
